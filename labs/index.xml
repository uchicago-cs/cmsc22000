<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Labs on CS 220</title>
    <link>https://uchicago-cs.github.io/cmsc22000/labs/</link>
    <description>Recent content in Labs on CS 220</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://uchicago-cs.github.io/cmsc22000/labs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting help on the lab assignments</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/help/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/help/</guid>
      <description>If you have any questions or get stuck on the lab assignments, there are two ways of getting help:
Slack We have a #course-labs channel on our Slack workspace that can be used to ask questions about the lab assignments. However, to keep that channel tidy we ask that you follow a couple of conventions in this channel.
The most important convention is that there should be one &amp;ldquo;thread&amp;rdquo; per question.</description>
    </item>
    
    <item>
      <title>Lab 1: Git</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab1/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab1/</guid>
      <description>Due: Wednesday, April 15th, 8pm
 NOTE: This lab is based on a Linux and Git lab originally written by Anne Rogers for CMSC 12100 (and updated and edited by a variety of instructors and TAs throughout the years)  In some of your previous CS courses, you may have become familiar with using Subversion (SVN) to handle revision control (or version control) of your projects and assignments, and to submit your work for grading.</description>
    </item>
    
    <item>
      <title>Lab 2: Software Design</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab2/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab2/</guid>
      <description>Due: Wednesday, April 22nd, 8pm
In this lab, you will carry out some basic software design tasks. This lab will be shorter than in other labs, because you will also be working on a design warmup exercise with your project team. Please note that, while the design warmup exercise is due at the same time as this lab, it will be part of your project score (it is not counted as an additional lab assignment).</description>
    </item>
    
    <item>
      <title>Lab 3: Make</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab3/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab3/</guid>
      <description>Due: Wednesday, April 29th, 8pm CDT
In the class project, you will likely produce dozens of C files that will ultimately produce a single executable. When dealing with multiple source files, specially when there are dependencies between them, it is common to use a build system instead of manually compiling and linking all the files. in this lab, we’ll explore the ways a program can be “built”&amp;ndash;that is, the way that source code is turned into binary code so that a computer can execute it.</description>
    </item>
    
    <item>
      <title>Lab 4: Debugging</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab4/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab4/</guid>
      <description>Due: Thursday, May 6th, 8pm
In this lab, you will get some practice debugging a few programs and, in particular, will resolve some of the errors we described in class. In some of the tasks, you will also become more familiar with GDB, a popular debugger.
As you work through this lab, you may want to refer to our Debugging Guide, which covers (and expands on) many of the topics we covered in class.</description>
    </item>
    
    <item>
      <title>Optional Lab: Advanced Git</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/advanced-git/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/advanced-git/</guid>
      <description>In the 150s/160s, as well as in the CS 220 labs, you have used version control systems (like Subversion and Git) essentially as a mechanism to store your code and to make it easily accessible to the course staff. However, in real software projects, version control systems are one of the most important tools that allow teams to collaborate on a shared code base.
In this lab, we will explore features of Git that are more directly related to collaborative software development, and which you will need to use during the course project.</description>
    </item>
    
  </channel>
</rss>