<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Labs on CS 220</title>
    <link>https://uchicago-cs.github.io/cmsc22000/labs/</link>
    <description>Recent content in Labs on CS 220</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://uchicago-cs.github.io/cmsc22000/labs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to submit your labs</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/submit/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/submit/</guid>
      <description>You will be submitting your labs using a tool called chisubmit that is available on the CS machines. Before using this tool, you first need to enable it inside your local repository. Just go into your local repository directory, and run the following:
chisubmit init  When asked for your username and password, just enter your CNetID and password. If there are no errors, you will now be able to run chisubmit from inside that directory.</description>
    </item>
    
    <item>
      <title>Lab 1: Git</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab1/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab1/</guid>
      <description>Due: Thursday, April 11th, 2:30pm
 **NOTE**: This lab is based on a Linux and Git lab originally written by Anne Rogers for CMSC 12100 (and updated and edited by a variety of instructors and TAs throughout the years)   In some of your previous CS courses, you became familiar with using Subversion (SVN) to handle revision control (or version control) of your projects and assignments, and to submit your work for grading.</description>
    </item>
    
    <item>
      <title>Lab 2: Software Design</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab2/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab2/</guid>
      <description>Due: Thursday, April 18th, 2:30pm
In this lab, you will carry out some basic software design tasks individually, and will also start working with your project team on a design warmup exercise. The individual portion of this lab will be shorter than in other labs, because we expect you to spend part of your time working on the design warmup exercise. In fact, we encourage you to spend most of the lab session working on the team exercise.</description>
    </item>
    
    <item>
      <title>Lab 3: Make</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab3/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab3/</guid>
      <description>Due: Thursday, April 25th, 2:30pm
In the class project, you will likely produce dozens of C files that will ultimately produce a single executable. When dealing with multiple source files, specially when there are dependencies between them, it is common to use a build system instead of manually compiling and linking all the files. in this lab, we’ll explore the ways a program can be “built”&amp;ndash;that is, the way that source code is turned into binary code so that a computer can execute it.</description>
    </item>
    
    <item>
      <title>Lab 4: Debugging</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab4/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab4/</guid>
      <description>Due: Thursday, May 2nd, 2:30pm
In this lab, you will get some practice debugging a few programs and, in particular, will resolve some of the errors we described in class. In some of the tasks, you will also become more familiar with GDB, a popular debugger.
As you work through this lab, you may want to refer to our Debugging Guide, which covers (and expands on) many of the topics we covered in class.</description>
    </item>
    
    <item>
      <title>Optional Lab: Advanced Git</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/advanced-git/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/advanced-git/</guid>
      <description>In the 150s/160s, as well as in the CS 220 labs, you have used version control systems (like Subversion and Git) essentially as a mechanism to store your code and to make it easily accessible to the course staff. However, in real software projects, version control systems are one of the most important tools that allow teams to collaborate on a shared code base.
In this lab, we will explore features of Git that are more directly related to collaborative software development, and which you will need to use during the course project.</description>
    </item>
    
    <item>
      <title>Lab 5: Testing</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab5/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab5/</guid>
      <description>Due: Thursday, May 9th, 2:30pm
By this point in your CS studies, you’ve probably experienced the following at least once:
 Your programming assignment is almost done, and everything works so far. Start working on the last task of the assignment. Make some minor changes. Run program. Everything stops working. The first task, the last task, and everything in between. Spend several hours debugging your code. Narrow down the issue to a silly mistake in the first task that only made things fail once the last task was implemented.</description>
    </item>
    
    <item>
      <title>Lab 6: Continuous Integration</title>
      <link>https://uchicago-cs.github.io/cmsc22000/labs/lab6/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/labs/lab6/</guid>
      <description>Due: Thursday, May 16th, 2:30pm
Continuous Integration, or CI, is the practice of frequently merging developers’ work into a mainline branch in a version control system like Git. CI almost always involves running an extensive set of test cases every time such a merge happens, or even every time new code is committed to the repository (not just on the mainline branch, but also on other branches). Thus many version control systems facilitate CI by providing mechanisms to trigger certain actions when code is pushed to a repository.</description>
    </item>
    
  </channel>
</rss>