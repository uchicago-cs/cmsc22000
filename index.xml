<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMSC 22000 - Introduction to Software Development on CS 220</title>
    <link>https://uchicago-cs.github.io/cmsc22000/</link>
    <description>Recent content in CMSC 22000 - Introduction to Software Development on CS 220</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Feb 2018 08:47:20 -0600</lastBuildDate>
    
	<atom:link href="https://uchicago-cs.github.io/cmsc22000/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FAQs</title>
      <link>https://uchicago-cs.github.io/cmsc22000/faq/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/faq/</guid>
      <description>Does CMSC 22000 fulfill any CS major requirements?
Yes, it can be counted as an elective in the CS major.
Can CMSC 22000 be used as a replacement for CMSC 15400?
No, CMSC 15400 is still required in the CS major. However, you are allowed to take CMSC 22000 between CMSC 15200 / 16200 and CMSC 15400.
Can I take CMSC 22000 concurrently with CMSC 15400?
This is technically possible, but strongly discouraged.</description>
    </item>
    
    <item>
      <title>Course Calendar</title>
      <link>https://uchicago-cs.github.io/cmsc22000/calendar/</link>
      <pubDate>Sat, 17 Feb 2018 08:50:04 -0600</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/calendar/</guid>
      <description>The course is divided into two phases:
 Lecture Phase: During the first three weeks of the quarter, the lecture sessions will involve lectures by the instructor on core concepts regarding the software development process. Project Phase: Starting in week 4, the focus of the class will shift towards the development of the course project, with team meetings on Monday, lectures on Wednesdays, and a guest lecture on Fridays.     Week Date Day Lecture Lab    Lecture</description>
    </item>
    
    <item>
      <title>Additional Resources</title>
      <link>https://uchicago-cs.github.io/cmsc22000/resources/</link>
      <pubDate>Sat, 17 Feb 2018 08:47:20 -0600</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/resources/</guid>
      <description>This page contains pointers to additional resources and readings that complement what we see in the lectures. While this class does not have a required textbook, most of the Software Engineering content draws heavily from Ian Sommerville&amp;rsquo;s book, Software Engineering.
Software Engineering Books  Software Engineering (10th Ed.), Ian Sommerville Pearson, 2015. Clean Code: A Handbook of Agile Software Craftsmanship, Robert C. Martin, Prentice Hall, 2008. Clean Architecture: A Craftsman&amp;rsquo;s Guide to Software Structure and Design, Robert C.</description>
    </item>
    
    <item>
      <title>Project - Spring 2018</title>
      <link>https://uchicago-cs.github.io/cmsc22000/projects/2018/</link>
      <pubDate>Sat, 17 Feb 2018 08:47:20 -0600</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/projects/2018/</guid>
      <description>In this project, you will be divided into six teams of five students, and will work collaboratively (both within your team and between teams) to create a complex software system that will involve not just designing and implementing a number of components, but also extending an existing software system. You will be using several tools to support the collaborative aspects of this project and, indeed, your collaborative skills will be as important as your coding skills to be successful in this project.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>https://uchicago-cs.github.io/cmsc22000/syllabus/</link>
      <pubDate>Sat, 17 Feb 2018 08:47:20 -0600</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/syllabus/</guid>
      <description>Course Description Developing a software system (e.g., an application, a web server, an operating system, etc.) requires much more than just knowing how to program. Software development encompasses multiple activities, such as systems design, implementation, testing, debugging, deployment, documentation, and maintenance, all weaved together by following a specific methodology. Not just that, software development is a highly collaborative activity, where certain soft skills, like effective communication and the ability to give/receive feedback, can be key to the success of a software project.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://uchicago-cs.github.io/cmsc22000/description/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/description/</guid>
      <description>Developing a software system (e.g., an application, a web server, an operating system, etc.) requires much more than just knowing how to program. Software development encompasses multiple activities, such as systems design, implementation, testing, debugging, deployment, documentation, and maintenance, all weaved together by following a specific methodology. Not just that, software development is a highly collaborative activity, where certain soft skills, like effective communication and the ability to give/receive feedback, can be key to the success of a software project.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://uchicago-cs.github.io/cmsc22000/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/summary/</guid>
      <description>Foobazzzz</description>
    </item>
    
    <item>
      <title>Project</title>
      <link>https://uchicago-cs.github.io/cmsc22000/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uchicago-cs.github.io/cmsc22000/project/</guid>
      <description>In the course project, you will be divided into six teams of five students, and will work collaboratively (both within your team and between teams) to create a complex software system that will involve designing and implementing a number of components. You will be using several tools to support the collaborative aspects of this project and, indeed, your collaborative skills will be as important as your coding skills to be successful in this project.</description>
    </item>
    
  </channel>
</rss>